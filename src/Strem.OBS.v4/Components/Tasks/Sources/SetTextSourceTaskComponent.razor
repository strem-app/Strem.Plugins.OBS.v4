@using Microsoft.AspNetCore.Components
@using Obs.v4.WebSocket.Reactive
@using Strem.Flows.Components.Tasks
@using Strem.Core.State
@using Strem.OBS.v4.Extensions
@using Strem.OBS.v4.Flows.Tasks

@inherits CustomTaskComponent<SetTextSourceTaskData>

@inject IObservableOBSWebSocket ObsClient;
@inject IAppState AppState;

<div class="field">
    <label class="label">Scene Name</label>
    <div class="control">
        <AutoComplete @bind-Value="@Data.SourceName" Data="SourceItems"></AutoComplete>
    </div>
</div>

<div class="field">
    <label class="label">Text</label>
    <div class="control">
        <ProcessedInput @bind-Value="@Data.Text" Placeholder="i.e V(viewer-count)"></ProcessedInput>
    </div>
</div>

@code {
    public override string Title => $"Set Text Source For {Data.SourceName}";
    
    public string[] SourceItems { get; set; } = Array.Empty<string>();

    protected override async Task OnInitializedAsync()
    {
        if (ObsClient.IsConnected)
        {
            if (!AppState.HasSourceList())
            { await ObsClient.PopulateSourceListData(AppState); }
            SourceItems = AppState.GetSourceList();
        }
        else
        { SourceItems = Array.Empty<string>(); }
        
        await base.OnInitializedAsync();
    }
}