@using Microsoft.AspNetCore.Components
@using Obs.v4.WebSocket.Reactive

@inherits Strem.Flows.Components.Triggers.CustomTriggerComponent<v4.Flows.Triggers.OnSceneChangedTriggerData>

@inject IObservableOBSWebSocket ObsClient;

<div class="field">
    <label class="label">Matching Scene Name</label>
    <div class="control">
        <AutoComplete @bind-Value="@Data.MatchingSceneName" Data="SceneNames"></AutoComplete>
    </div>
    <HelperInfo>This optionally lets you only trigger when the new scene matches the name you specified, leave blank to match any scene</HelperInfo>
</div>


@code {
    public override string Title => $"On Scene Changed {(string.IsNullOrEmpty(Data.MatchingSceneName) ? "" : $"To {Data.MatchingSceneName}")}";

    public string[] SceneNames { get; set; } = Array.Empty<string>();
    
    protected override async Task OnInitializedAsync()
    {
        if (ObsClient.IsConnected)
        {
            var scenes = await ObsClient.GetSceneList();
            SceneNames = scenes.Scenes.Select(x => x.Name).ToArray();
        }
        else
        { SceneNames = Array.Empty<string>(); }
        
        await base.OnInitializedAsync();
    }
}